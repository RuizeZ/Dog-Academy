1
~R(B,C)
6
T(z) => ~P(A,B,z)
T(C)
Q(A,x) => R(x,C)
T(y) => ~S(A,y)
~S(A,y) => P(A,y,C)
~P(A,x,C) => Q(A,x)

5
Greet(Hayley,TrainerJosh)
PlayFetch(Luna,TrainerBibek)
ShowOff(Ares,TrainerChristina)
Graduate(Hayley)
Play(Leia,Teddy)
49
Vaccinated(x) => Start(x)
Start(x) & Healthy(x) => Ready(x)
RespondToName(x) => Train(Come,x)
Ready(x) & Train(y,x) => Learn(y,x)
Learn(Come,x) => Train(Sit,x)
Learn(Come,x) & Learn(Sit,x) => Train(Down,x)
Learn(Sit,x) => Train(Paw,x)
Learn(Paw,x) & Working(y) => Greet(x,y)
Scared(x,y) => ~Socialize(x,y)
Ready(x) & Ready(y) & Socialize(x,y) & Socialize(y,x) => Play(x,y)
Learn(Get,x) => Train(Drop,x)
Learn(Come,x) & HoldToy(x) => Train(Get,x)
RespondToName(x) & HoldToy(x) => Train(Drop,x)
Learn(Come,x) & Learn(Get,x) & Learn(Drop,x) => Train(Fetch,x)
Learn(Fetch,x) & Working(y) => PlayFetch(x,y)
Learn(Down,x) => Train(Roll,x)
Learn(Roll,x) & Working(y) => ShowOff(x,y)
RespondToName(x) & Desensitized(Leash,x) => Train(WalkIndoors,x)
Learn(WalkIndoors,x) & Desensitized(Cars,x) => Train(WalkOutdoors,x)
Learn(WalkOutdoors,x) & Learn(Down,x) => Graduate(x)
~Sensitive(y,x) => Desensitized(y,x)
Sensitive(y,x) => TrainDesensitized(y,x)
Sensitive(y,x) & TrainDesensitized(y,x) => Desensitized(y,x)
Vaccinated(Hayley)
Vaccinated(Ares)
~Vaccinated(Leia)
Vaccinated(Luna)
Vaccinated(Teddy)
~Healthy(Ares)
Healthy(Hayley)
Healthy(Luna)
Healthy(Leia)
Healthy(Teddy)
~Scared(Leia,Teddy)
Scared(Teddy,Leia)
~Sensitive(Leash,Hayley)
~Sensitive(Cars,Teddy)
Sensitive(Cars,Luna)
~Sensitive(Cars,Hayley)
Working(TrainerChristina)
~Working(TrainerJosh)
Working(TrainerBibek)
RespondToName(Hayley)
RespondToName(Luna)
RespondToName(Ares)
HoldToy(Luna)
~HoldToy(Leia)
~RespondToName(Leia)
Sensitive(Cars,Leia)

1
p2(Bob,Bill)
1
p1(x,y) => ~p2(y,z)
false


1
~I(D)
2
I(x) => H(x)
~H(D)
true

1
Older(Lulu,Fifi)
4
Mother(Lulu,Fifi)
Alive(Lulu)
Mother(x,y) => Parent(x,y)
Parent(x,y) & Alive(x) => Older(x,y)
true

1
Older(x,Fifi)
4
Mother(Lulu,Fifi)
Alive(Lulu)
Mother(x,y) => Parent(x,y)
Parent(x,y) & Alive(x) => Older(x,y)
true

1
hate(M,Caesar)
6
man(M)
Pompeian(M)
Pompeian(x) => Roman(x)
ruler(Caesar)
Roman(x) & ~loyalto(x,Caesar) & ~hate(x,Caesar)
loyalto(x,y)
man(x) & ruler(y) & try(x,y) & loyalto(x,y)
try(M,Caesar)
True

1
Successful(TommyTrojan)
6
Obtain(x,MBA) & Graduate(x,CumLaude) & ~Successful(x)
Wealthy(TommyTrojan)
Wealthy(x) & ~Graduate(x,CumLaude)
Invest(x) & ~Obtain(x,y)
Wealthy(x) & ~Obtain(x,y)
~Invest(TommyTrojan)

1
Evil(John)
3
King(x) & Greedy(x) => Evil(x)
King(John)
Greedy(y)

1
likes(John,Peanuts)
9
food(x) => likes(John,x)
food(Apple)
food(vegetables)
eats(x,y) & ~killed(x) => food(y)
eats(Anil,Peanuts)
alive(Anil)
eats(Anil,x) => eats(Harry,x)
~killed(x) => alive(x)
alive(x) => ~killed(x)
true

1
Criminal(West)
8
American(x) & Weapon(y) & Sells(x,y,z) & Hostile(z) => Criminal(x)
Missile(x) & Owns(Nono,x) => Sells(West,x,Nono)
Enemy(x,America) => Hostile(x)
Missile(x) => Weapon(x)
Owns(Nono,M1)
Missile(M1)
American(West)
Enemy(Nono,America)
true

6
F(Bob)
H(John)
~H(Alice)
~H(John)
G(Bob)
G(Tom)
14
A(x) => H(x)
D(x,y) => ~H(y)
B(x,y) & C(x,y) => A(x)
B(John,Alice)
B(John,Bob)
D(x,y) & Q(y) => C(x,y)
D(John,Alice)
Q(Bob)
D(John,Bob)
F(x) => G(x)
G(x) => H(x)
H(x) => F(x)
R(x) => H(x)
R(Tom)
FALSE
TRUE
TRUE
FALSE
FALSE
TRUE

2
Mortal(Socretes)
~Mortal(Aristotle)
3
Man(x) => Mortal(x)
Man(Socretes)
Man(Aristotle)
True
False

1
A(Bob)
2
~A(x) & B(x) => ~C(x)
~B(Bob) & C(Bob)
false

2
King(John)
King(Julius)
8
Queen(Mary)
Husband(Mary,John)
Husband(y,x) & Queen(y) => King(x)
Queen(x) => Beautiful(x)
Husband(Sita,Julius)
Sister(Mary,Sita)
Sister(x,y) => Sister(y,x)
Sister(x,y) & Queen(x) => Queen(y)
true
true

2
~Loves(Mary,John)
~Loves(Mary,Bill)
6 
Loves(Mary,x) => Star(x)
Student(x) & ~Pass(x) => ~Play(x)
Student(John)
Student(x) & ~Study(x) => ~Pass(x)
~Play(x) => ~Star(x)
~Study(John)
True
False

2
~Date(Mary,John)
Date(Mary,Bill)
9
Harley(y) & Rides(x,y) => Rough(x)
Biker(x) => Rides(x,Davidson)
BMW(Vfour)
Harley(Davidson)
Rides(x,y) & BMW(y) => Yuppie(x)
Yuppie(x) => Lawyer(x)
Nice(x) & Rough(y) => ~Date(x,y)
Nice(Mary)
Biker(John)
~Lawer(John)
True
False